Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-02-19T15:52:44+10:00

**COMMON ERROR MESSAGE**
https://docs.oracle.com/cd/E19253-01/816-4557/6maosrk17/index.html
https://docs.oracle.com/cd/E19253-01/816-4557/trouble-1/index.html

**How to migrate from pam_krb5 to SSSD in Red Hat Enterprise Linux 8**
https://access.redhat.com/solutions/4256011

**TEST RUN A HOST KEYTAB**
# kdestroy -A
# kinit -kt /etc/krb5.keytab
# klist
WORKING:
# ldapsearch -Y GSSAPI -b dc=laptop,dc=example,dc=org "(objectClass=ipahost)" -h f29-idm0.laptop.example.org
SASL/GSSAPI authentication started
SASL username: host/f29-idm1.laptop.example.org@LAPTOP.EXAMPLE.ORG
SASL SSF: 256
SASL data security layer installed.

NOT WORKING:
# ldapsearch -Y GSSAPI -b dc=laptop,dc=example,dc=org "(objectClass=ipahost)" -h f29-idm0
SASL/GSSAPI authentication started
ldap_sasl_interactive_bind_s: Local error (-2)
additional info: SASL(-1): generic failure: GSSAPI Error: Unspecified GSS failure.  Minor code may provide more information (Server ldap/f29-idm0@LAPTOP.EXAMPLE.ORG not found in Kerberos database)


**SSO ON SHORT HOSTNAME**
SERVER
# kinit admin
# ipa host-add-principal ipaclient.example.local host/ipaclient@EXAMPLE.IDM

CLIENT
# kinit admin
# cp /etc/krb5.keytab /root
# ipa-getkeytab -s ipa.example.local -r -p host/ipaclient@EXAMPLE.IDM -k /etc/krb5.keytab
# ipa-getkeytab -s ipa.example.local -r -p host/ipaclient.example.local@EXAMPLE.IDM -k /etc/krb5.keytab

VERIFY
# klist -kt 
# kvno host/ipaclient@EXAMPLE.IDM
# kvno host/ipaclient.example.local@EXAMPLE.IDM


**AUTHENTICATE KEYTAB**
# kinit -k

**REMOVING KEYTABS**
# ipa-rmkeytab -r EXAMPLE.COM -k /etc/krb5.keytab
# ipa-rmkeytab -p ldap/client.example.com -k /etc/krb5.keytab

**AUTHENTICATE HOST PRINCIPAL**
# kinit -k host/rhel7-ipa-server.example.com@EXAMPLE.COM 
# kinit -k -t /etc/krb5.keytab -p host/test.example.com

**VERIFY KEY VERSION NUMBER ON SERVER KEYTAB MATCHES LOCAL KEYTAB**
# kvno -S cifs justin-2k8r2.jstephen.local
# kvno -S host ipaclient.example.com

**VERIFY KVNO IN SYSTEM VS KEYTAB **(both should have the same results)
# klist -ekt [[/var/lib/ipa/gssproxy/http.keytab]]
# kvno HTTP/ipa74master.jvipa74.com@JVIPA74.COM

**VERIFY SERVICE PRINCIPAL FROM SERVER**
# kinit aduser@AD.REALM
# KRB5_TRACE=/dev/stdout kvno host/sv67056.sunlifecorp.com@NIX.SUNLIFECORP.COM
 # ktinit -k -t [[/path-to-file]]

**GENERATE NEW SERVICE KEYTAB**
https://access.redhat.com/solutions/208173 ‚Üê AD
# ipa-getkeytab -s server.example.com -p host/lss3-rhel7hina3.jaist.ac.jp -k [[/etc/krb5.keytab]]
# net ads keytab add cifs -U Administrator
https://access.redhat.com/solutions/226923
# net ads join createupn="nfs/nfsclient.example.org@EXAMPLE.ORG" -U Administrator

**GENERATE USER KEYTAB IN AD**
https://access.redhat.com/solutions/3103601
ktpass.exe /out sa-samba.keytab -princ sa-samba@EXAMPLE.COM /Pass "Current_password" /mapuser EXAMPLE\sa-samba /crypto all /ptype KRB5_NT_PRINCIPAL

**ADD ENCRYPTION TYPE IN KEYTAB**
ipa-getkeytab -s <ipaserver> -p host/<rhel6ipaclient> -k /tmp/<rhel6ipaclient>.keytab -e aes256-cts-hmac-sha1-96,aes128-cts-hmac-sha1-96,des3-cbc-sha1,arcfour-hmac

**GENERATE KEYTAB FROM AD**
# net ads keytab add host -U Administrator
# net ads keytab add SSSD-HOST1$ -U Administrator

**LIST CACHE** 
# klist -ce /var/lib/gssproxy/clients/krb5cc_0

**HTTP KEYTAB (IPA)**
#  klist -ekt [[/var/lib/ipa/gssproxy/http.keytab]]

**GENERATE KEYTAB MIT KERBEROS**
# ktutil
ktutil:  addent -password -p ddbb1/ddbb1.demo.test@DEMO.TEST -k 5 -e RC4-HMAC
Password for ddbb1/ddbb1.demo.test@DEMO.TEST: xxxxxx
ktutil:  wkt ddbb1.keytab
ktutil:  q

**KDC IP ADDRESS**
# [[/var/lib/sss/pubconf/kdcinfo]]

**DIG THE AD DNS**
# dig SRV _ldap._tcp.<ad-domain>
# dig SRV _kerberos._tcp.<ad-domain>

**CONFIG FILES**
# [[/etc/krb5.conf]]
# man krb5.conf

**LOGS**
# [[/var/log/krb5kdc.log]]
# [[/var/log/kadmin.log]]

**CLIENT DEBUG**
# KRB5_TRACE=/dev/stdout 
# kinit -k

**ID MAPPING**
# cat etc/idmapd.conf |egrep -v "^#|^$"
# nfsidmap -d

**CONFIGS**
permitted_enctypes = aes256-cts rc4-hmac
allow_weak_crypto = no|yes

**CACHE QUERY**
# klist -c /var/lib/gssproxy/clients/krb5cc_535001598

**SERVICE TGT DELEGATION ON HOST** **(IPA)**
# ipa host-mod -ok-as-delegate=true hostname

**MIT KERBEROS**
# addprinc user/client.example.com
# addprinc -randkey nfs/client.example.com
# ktadd nfs/client.example.com
# getprinc nfs/client.example.com
# wkt [[/tmp/test.keytab]]
MERGE
> ktutil
  ktutil: read_kt mykeytab-1
  ktutil: read_kt mykeytab-2
  ktutil: read_kt mykeytab-3
  ktutil: write_kt krb5.keytab
  ktutil: quit
**DEBUG**
GSSPROXY
# vim /etc/gssproxy/gssproxy.conf
  [gssproxy]
 debug = true
 debug_level = 2
 # systemctl restart gssproxy.service


